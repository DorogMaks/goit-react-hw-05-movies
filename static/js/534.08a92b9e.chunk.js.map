{"version":3,"file":"static/js/534.08a92b9e.chunk.js","mappings":"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","sources":["components/MovieDetails/Description/Description.jsx","components/MovieDetails/MovieDetails.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/Shared/Section.styled.js","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport noPoster from '../../../images/no-poster.jpg';\n\nconst Description = ({\n  movieDetails: {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  },\n}) => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const poster = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  return (\n    <>\n      <div>\n        <img\n          src={poster_path ? poster : noPoster}\n          alt={original_title}\n          width={245}\n          height={368}\n        />\n        <div>\n          <h2>{`${original_title} (${release_date.slice(0, 4)})`}</h2>\n          <p>{`User Score: ${Math.round(vote_average * 10)}%`}</p>\n          <div>\n            <h3>Overview</h3>\n            <p>{overview ?? 'Overview not found'}</p>\n          </div>\n          <div>\n            <h3>Genres</h3>\n            <p>\n              {genres.length\n                ? genres.map(genre => genre.name).join(', ')\n                : 'Genres are not specified'}\n            </p>\n          </div>\n        </div>\n      </div>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default Description;\n\nDescription.propTypes = {\n  movieDetails: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n  }).isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\nimport Description from './Description/Description';\nimport { Loader } from 'components/Loader/Loader';\nimport { Notification } from 'components/Notification/Notification';\nimport { Container } from 'components/Shared/Container.styled';\nimport { Section } from 'components/Shared/Section.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const [movieDetails, setMovieDetails] = useState({});\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    setStatus('pending');\n\n    const controller = new AbortController();\n\n    (async () => {\n      try {\n        const res = await fetchMovieDetails(movieId, controller);\n        setMovieDetails(res);\n        setStatus('resolved');\n      } catch (error) {\n        console.error(error.message);\n        setStatus('rejected');\n      }\n    })();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <Section>\n      <Container>\n        <Link to={backLinkHref}>{'< Go back'}</Link>\n        {status === 'pending' && <Loader />}\n        {status === 'rejected' && (\n          <Notification message=\"Ooops, something went wrong\" />\n        )}\n        {status === 'resolved' && movieDetails && (\n          <Description movieDetails={movieDetails} />\n        )}\n      </Container>\n    </Section>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const Message = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Text = styled.p`\n  font-size: 26px;\n  font-weight: 600;\n  text-align: center;\n  color: #777;\n`;\n","import PropTypes from 'prop-types';\nimport { Message, Text } from './Notification.styled';\nimport notFound from '../../images/notFound.jpg';\n\nexport const Notification = ({ message }) => {\n  return (\n    <Message>\n      <img src={notFound} alt=\"not found\" width=\"280px\" />\n      <Text>{message}</Text>\n    </Message>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 100%;\n  padding: 16px 0px;\n`;\n","import axios from 'axios';\n\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76d635679cabf189c0749ed5946c0835';\n\nexport async function fetchTrending(controller) {\n  const url = `${API_BASE_URL}/trending/movie/day`;\n  const urlParams = {\n    api_key: API_KEY,\n  };\n\n  const response = await axios.get(url, {\n    params: urlParams,\n    signal: controller.signal,\n  });\n\n  return response.data.results;\n}\n\nexport async function fetchMovies(searchQuery, controller) {\n  const url = `${API_BASE_URL}/search/movie`;\n  const urlParams = {\n    api_key: API_KEY,\n    query: searchQuery,\n  };\n\n  const response = await axios.get(url, {\n    params: urlParams,\n    signal: controller.signal,\n  });\n\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(id, controller) {\n  const url = `${API_BASE_URL}/movie/${id}`;\n  const urlParams = {\n    api_key: API_KEY,\n  };\n\n  const response = await axios.get(url, {\n    params: urlParams,\n    signal: controller.signal,\n  });\n\n  return response.data;\n}\n\nexport async function fetchCast(id, controller) {\n  const url = `${API_BASE_URL}/movie/${id}/credits`;\n  const urlParams = {\n    api_key: API_KEY,\n  };\n\n  const response = await axios.get(url, {\n    params: urlParams,\n    signal: controller.signal,\n  });\n\n  return response.data.cast;\n}\n\nexport async function fetchReviews(id, controller) {\n  const url = `${API_BASE_URL}/movie/${id}/reviews`;\n  const urlParams = {\n    api_key: API_KEY,\n  };\n\n  const response = await axios.get(url, {\n    params: urlParams,\n    signal: controller.signal,\n  });\n\n  return response.data.results;\n}\n"],"names":["movieDetails","poster_path","original_title","release_date","vote_average","overview","genres","backLinkHref","useLocation","state","from","poster","src","noPoster","alt","width","height","slice","Math","round","length","map","genre","name","join","to","Suspense","fallback","Loader","movieId","useParams","useState","setMovieDetails","status","setStatus","useEffect","controller","AbortController","fetchMovieDetails","res","console","error","message","abort","Notification","Message","styled","Text","notFound","Section","API_BASE_URL","API_KEY","fetchTrending","url","urlParams","api_key","axios","params","signal","response","data","results","fetchMovies","searchQuery","query","id","fetchCast","cast","fetchReviews"],"sourceRoot":""}